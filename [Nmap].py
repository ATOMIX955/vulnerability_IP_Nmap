#!/usr/bin/env python3
from MENU.Tres import *

class Na:
	def __init__(self):
		
		numero()
		
	def opcio(self):
		
		try:
			ser(self)
		except:
			print("")
			
	def menu(self):
			if self.opc == 0:
				print("""\n\033[0;31m[ \033[1;30mCHAU AMIGO MIO \U0001F44B \033[0;31m]\033[1;37m""")
				sleep(4)
				system("clear")
				exit()
				
			elif self.opc == 1:
				try:
					Escaneo()
				except:
					print("")
				
			elif self.opc == 2:
				try:
					Realizar()
				except:
					print()
				
			elif self.opc == 3:
				try:
					Detectar()
				except:
					print()
				
				
			elif self.opc == 4:
				try:
					Subred()
				except:
					print()
				
			elif self.opc == 5:
				try:
					archivo()
				except:
					print()
		
			elif self.opc == 6:
				try:
					Firewall()
				except:
					print()
				
			elif self.opc == 7:
				try:
					red()
				except:
					print()
				
			elif self.opc == 8:
				try:
					rapido()
				except:
					print()
			
			elif self.opc == 9:
				try:
					ordenado()
				except:
					print()
			
			elif self.opc == 10:
				try:
					interfaces()
				except:
					print()
				
			elif self.opc == 11:
				try:
					UDP()
				except:
					print()
				
			elif self.opc == 12:
				try:
					servicios()
				except:
					print()
			
			elif self.opc == 13:
				try:
					S_O()
				except:
					print()
			
			elif self.opc == 14:
				try:
					varios()
				except:
					print()
			
		
			elif self.opc == 15:
				try:
					Ejecutar()
				except:
					print()
				
			elif self.opc == 16:
				try:
					TCP()
				except:
					print()
				
			elif self.opc == 17:
				try:
					ARP()
				except:
					print()
				
			elif self.opc == 18:
				try:
					análisis()
				except:
					print()
			
			elif self.opc == 19:
				try:
					escáneres()
				except:
					print()
				
			elif self.opc == 20:
				try:
					versión()
				except:
					print()
				
			else:
				print(f"""
			
			\033[40m\033[31m[ \033[40m\033[1;30m NO EXISTE \U0001F631 \033[40m\033[37m {self.opc} \033[40m\033[31m]
			
			""")
			sleep(4)
			system("clear")
	
		
	
if __name__=="__main__":
	while True:
				try:
					s = socket.socket()
					try:
						s.connect(("www.google.com", 80))
					except (socket.gaierror, socket.timeout):
						sin_internet()
						sleep(2)
						system("clear")
					else:
						bann()
						
						mi = Na()
						mi.opcio()
						mi.menu()
						sleep(2)
						system("clear")
					s.close()
				except:
					sleep(4)
					system("clear")
					print("""
						
		        \033[40m\033[31m[ \033[40m\033[1;30m GRACIAS \U0001F64F \033[40m\033[31m]
\033[1;37m
						""")
					break
